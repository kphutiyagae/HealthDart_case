{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport React from 'react';\nimport ListItem from \"./ListItem\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport tw from \"twrnc\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar orderData = require(\"../data/orders.json\");\n\nexport default function ListContainer() {\n  var pendingOrderArray = getPendingOrders();\n  var deliveredOrderArray = getDeliveredOrders();\n  return _jsx(SectionList, {\n    sections: [{\n      title: 'Pending Orders',\n      data: pendingOrderArray\n    }, {\n      title: 'Delivered',\n      data: deliveredOrderArray\n    }],\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return _jsx(ListItem, {\n        order_status: item.orderStatus,\n        pharmacy_name: item.pharmacyName,\n        order_total: item.orderTotal\n      }, item.orderID);\n    },\n    renderSectionHeader: function renderSectionHeader(_ref2) {\n      var section = _ref2.section;\n      return _jsx(Text, {\n        style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"font-bold my-5 ml-5 text-lg\"]))),\n        children: section.title\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index;\n    }\n  });\n}\n\nfunction getDeliveredOrders() {\n  var deliveredOrders = orderData.filter(function (x) {\n    return x.orderStatus === 'Delivered';\n  });\n  return deliveredOrders;\n}\n\nfunction getPendingOrders() {\n  var pendingOrders = orderData.filter(function (x) {\n    return !(x.orderStatus === 'Delivered');\n  });\n  return pendingOrders;\n}","map":{"version":3,"names":["React","ListItem","tw","orderData","require","ListContainer","pendingOrderArray","getPendingOrders","deliveredOrderArray","getDeliveredOrders","title","data","item","orderStatus","pharmacyName","orderTotal","orderID","section","index","deliveredOrders","filter","x","pendingOrders"],"sources":["C:/Users/Kopano/Desktop/HD/HealthDart_case/assets/components/ListContainer.js"],"sourcesContent":["import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport { SectionList, Text } from 'react-native';\r\nimport tw from \"twrnc\";\r\n\r\nconst orderData = require('../data/orders.json');    //Importing given order data\r\n/*\r\nListContainer takes in orders data, formats data to filter orders based on given criteria for each section. \r\narrays are passed to SectionList component with two sections \"Pending Orders\" and \"Delivered Orders\" , where they are mapped to custom ListItem\r\ncomponents and returned to OrderScreenContainer for rendering.\r\n*/\r\n\r\nexport default function ListContainer() {\r\n\r\n  //Function to filter orders such as to only return array of orders that are pending (including cancelled, submitted and out for delivery orders.)\r\n  const pendingOrderArray = getPendingOrders();\r\n\r\n  //Function to filter orders such as to only return array of only orders that are delivered.\r\n  const deliveredOrderArray = getDeliveredOrders();\r\n\r\n  return (\r\n    <SectionList \r\n    sections={\r\n      [\r\n        {\r\n        title : 'Pending Orders',\r\n        data : pendingOrderArray\r\n      },\r\n      {\r\n        title : 'Delivered',\r\n        data : deliveredOrderArray\r\n      }\r\n      ]\r\n    }\r\n    renderItem={ ({item}) => <ListItem \r\n    key={item.orderID}\r\n    order_status={item.orderStatus}\r\n    pharmacy_name={item.pharmacyName}\r\n    order_total={item.orderTotal}\r\n    /> }\r\n    renderSectionHeader={({section}) => (\r\n      <Text\r\n      style={tw`font-bold my-5 ml-5 text-lg`}\r\n      >{section.title}</Text>\r\n    )}\r\n    keyExtractor={ (item, index) => index}\r\n    />\r\n  )\r\n\r\n}\r\n\r\n//This function filters the data for all orders that are delivered and returns them as a JSON array.\r\nfunction getDeliveredOrders(){\r\n\r\n  const deliveredOrders = orderData.filter( x => x.orderStatus === 'Delivered');\r\n  return deliveredOrders;\r\n}\r\n\r\n//This function filters the data for all orders that are pending (Out for delivery, Submitted and Cancelled) and returns them as a JSON array.\r\nfunction getPendingOrders(){\r\n\r\n  const pendingOrders = orderData.filter( x => !(x.orderStatus === 'Delivered') );  \r\n  return pendingOrders;\r\n}\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP;;;AAEA,OAAOC,EAAP,MAAe,OAAf;;;AAEA,IAAMC,SAAS,GAAGC,OAAO,uBAAzB;;AAOA,eAAe,SAASC,aAAT,GAAyB;EAGtC,IAAMC,iBAAiB,GAAGC,gBAAgB,EAA1C;EAGA,IAAMC,mBAAmB,GAAGC,kBAAkB,EAA9C;EAEA,OACE,KAAC,WAAD;IACA,QAAQ,EACN,CACE;MACAC,KAAK,EAAG,gBADR;MAEAC,IAAI,EAAGL;IAFP,CADF,EAKA;MACEI,KAAK,EAAG,WADV;MAEEC,IAAI,EAAGH;IAFT,CALA,CAFF;IAaA,UAAU,EAAG;MAAA,IAAEI,IAAF,QAAEA,IAAF;MAAA,OAAY,KAAC,QAAD;QAEzB,YAAY,EAAEA,IAAI,CAACC,WAFM;QAGzB,aAAa,EAAED,IAAI,CAACE,YAHK;QAIzB,WAAW,EAAEF,IAAI,CAACG;MAJO,GACpBH,IAAI,CAACI,OADe,CAAZ;IAAA,CAbb;IAmBA,mBAAmB,EAAE;MAAA,IAAEC,OAAF,SAAEA,OAAF;MAAA,OACnB,KAAC,IAAD;QACA,KAAK,EAAEf,EAAF,qGADL;QAAA,UAEEe,OAAO,CAACP;MAFV,EADmB;IAAA,CAnBrB;IAwBA,YAAY,EAAG,sBAACE,IAAD,EAAOM,KAAP;MAAA,OAAiBA,KAAjB;IAAA;EAxBf,EADF;AA6BD;;AAGD,SAAST,kBAAT,GAA6B;EAE3B,IAAMU,eAAe,GAAGhB,SAAS,CAACiB,MAAV,CAAkB,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACR,WAAF,KAAkB,WAAtB;EAAA,CAAnB,CAAxB;EACA,OAAOM,eAAP;AACD;;AAGD,SAASZ,gBAAT,GAA2B;EAEzB,IAAMe,aAAa,GAAGnB,SAAS,CAACiB,MAAV,CAAkB,UAAAC,CAAC;IAAA,OAAI,EAAEA,CAAC,CAACR,WAAF,KAAkB,WAApB,CAAJ;EAAA,CAAnB,CAAtB;EACA,OAAOS,aAAP;AACD"},"metadata":{},"sourceType":"module"}